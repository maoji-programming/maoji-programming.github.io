html,
body {
  width: 100%;
  height: 100%;
  
}

body {
    background-image: url("./background.jpg");
    //background-color: #222034;
    background-size: cover;                      
    background-repeat: no-repeat;
    background-position: center center;
    overflow: hidden;
}

.container {
  width: 100%;
  height: 100%;
  
}

.circle-container {
  $particleWidth: 10px;
  $particleNum: 30;
  $particleColor: hsl(180, 100%, 80%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 15%;
    height: 300%;
    //border-radius: 50%;
    mix-blend-mode: screen;
    background-image: linear-gradient(
      hsl(50, 100%, 80%),
      hsl(50, 100%, 80%) 10%,
      hsla(50, 100%, 80%, 0) 56%
    );
    //background-image: url(src/assets/background.jpg);
    
    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(2.0, 2.0, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(2.0, 2.0, 1);
      }
    }
  }

  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: random($particleWidth);
      width: $circleSize + px;
      height: $circleSize + px;

      $startPositionY: random(10) + 100;
      $framesName: "move-frames-" + $i;
      $moveDuration: 7000 + random(4000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(11000) + ms;

      @keyframes #{$framesName} {
        $XPos: random(100) + vw;
        from {
          
          transform: translate3d(
            #{$XPos},
            #{$startPositionY + vh},
            0
          );
        }
        
        to {
          transform: translate3d(
            #{$XPos},
            #{- $startPositionY - random(30) + vh},
            0
          );
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
}
